</body>
</code></pre>
</code></pre>
var arr = [1,2,3,4,5,6,7,8,9,10];
  return (Math.pow(x,3))
</code></pre>

<pre><code>function f(x){ 
</code></pre>
</code></pre>
  sum += f(i)

<pre><code>function f(x){ 
<p>Например, мы хотим вычислить сумму кубов целых чисел от 1 до 100.</p>
<p>Но, в общем, функциональное (и декларативное в целом) программирование радикально отличается от императивного программирования именно тем, что по сути функциональная программа представляет собой чистую математическую функцию, зависящую строго от своих аргументов, а выполнением программы становится вычисление для конкретных аргументов (или <em>аппликация</em>, т.е. применение, поэтому иногда говорят об <em>аппликативном программировании</em>).</p>
<p><a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B1%D0%BE%D1%87%D0%BD%D1%8B%D0%B9_%D1%8D%D1%84%D1%84%D0%B5%D0%BA%D1%82_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29" class="uri" title="Побочный_эффект_(программирование)">https://ru.wikipedia.org/wiki/Побочный_эффект_(программирование)</a></p>
end.
  flag := true;
end;
  if flag then f:=n

<p>Аналог примера на Pascal:</p>
</code></pre>
<p>при исполнении в консоли увидим следующие ответы:</p>
console.log( f(1)+f(2) );

      flag = !flag; return(2*n)
  if (flag) {
<h4>Разница в понимании функций в функциональном и в императивном программировании</h4>
<!-- (может, уровень 2 ??) -->  
<p>Ещё одним примером декларативного программирования является «информационно-логический язык» (в другом представлении — DSL) SQL, предназначенный для работы с данными, хранимыми в реляционных базах данных. Этот язык не является тьюринг-полным, но это декларативный язык программирования, не детализирующий как именно следует выполнять запросы, что ложится уже на плечи СУБД.</p>
<h4>Факт</h4>

<p>Парадигма программирования, основанная на автоматическом доказательстве теорем. Логическое программирование основано на теории и аппарате математической логики с использованием математических принципов резолюций. Самым известным языком логического программирования является Prolog.</p>
<p>В идеале, составляется точная спецификация задачи, а машина затем «думает» как решать задачу и сама её решает.</p>
<p>Парадигма программирования, в которой задаётся спецификация решения задачи, т.е. описывается, <strong>что</strong> представляет собой проблема и ожидаемый результат.</p>
<!-- [http://www.softcraft.ru/paradigm/dp/dp01/](http://www.softcraft.ru/paradigm/dp/dp01/ Дехтяренко. Программирование в повествовательном наклонении) -->
<!-- Зюзысов С.5 -->
<blockquote>
<h4>Вывод</h4>
<li>Python, Java, C++.</li>
<li>ассемблер;</li>
<h4>Традиционные языки программирования</h4>
<h4>Структура архитектуры фон Неймана</h4>
<li>данные, полученные при выполнении инструкции, могут записываться в память.</li>
<li>в исходном коде программы записываются инструкции (команды);</li>
</ul>
<li>использование оператора присваивания;</li>
<p>Основные черты императивных языков:</p>
<h3>Что такое императивное программирование?</h3>
<body>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
      div.column{display: inline-block; vertical-align: top; width: 50%;}
      code{white-space: pre-wrap;}
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
<head>
